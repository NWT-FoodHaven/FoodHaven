spring:
  #  # ovo za main je dodano kako bi se mogao pokrenuti servis
  #  main:
  #    web-application-type: reactive # dodaje asinhronost, extends WebSecurityConfigurerAdapter ne radi kada je ovdje reactive
  #    allow-bean-definition-overriding: true

  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: ingredient-service
          predicates:
            - Path=/api/ingredients/**,/api/ingredientPictures/**,/api/ingredientRecipes/**
          uri: lb://ingredient-service
          filters:
            - StripPrefix=0
        - id: rating-service
          predicates:
            - Path=/api/ratings/**
          uri: lb://rating-service
          filters:
            - StripPrefix=0
        - id: recipe-service
          predicates:
            - Path=/api/recipes/**,/api/categorys/**,/api/pictures/**,/api/steps/**
          uri: lb://recipe-service
          filters:
            - StripPrefix=0
        - id: user-service
          predicates:
            - Path=/api/users/**,/api/roles/**
          uri: lb://user-service
          filters:
            - StripPrefix=0
        - id: auth-service
          predicates:
            - Path=/login/**
          uri: lb://user-service
          filters:
            - StripPrefix=0
            - RemoveRequestHeader=Cookie
            - RemoveRequestHeader=Set-Cookie,Authorization
            - RemoveRequestHeader=Authorization     #Remove All the sensitive request headers (Cookie, Set-Cookie & Authorization) while passing request to downstream services

  security:
    user:
      name: "user"
      password: "password"
server:
  port: 8088

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true

#da se ipsisuje u konzoli kroz koje je korake pro≈°ao
logging:
  level:
    org:
      springframework:
        security: DEBUG